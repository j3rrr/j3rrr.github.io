{"version":3,"sources":["webpack:///./src/pages/index.module.scss","webpack:///./src/templates/blog-list-template.js"],"names":["module","exports","BlogList","render","posts","this","props","data","allMarkdownRemark","edges","pageContext","currentPage","isFirst","isLast","numPages","prevPage","nextPage","title","className","indexStyles","map","node","post","to","fields","slug","frontmatter","date","rel","React","Component","blogListQuery"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,KAAO,8B,+NCMzCC,E,kGACjBC,OAAA,WACI,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAD3C,EAG6BJ,KAAKC,MAAMI,YAArCC,EAHH,EAGGA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALV,EAGgBG,SAGfC,EAAWJ,EAAc,GAAM,EAApB,sBAA+CA,EAAc,GACxEK,EAAQ,WAAaL,EAAc,GAEzC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMM,MAAM,SACZ,oCACA,wBAAIC,UAAWC,IAAYf,OAC1BA,EAAMgB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEV,OACI,wBAAIH,UAAWC,IAAYG,MACvB,kBAAC,IAAD,CAAMC,GAAE,SAAWF,EAAKG,OAAOC,MAC/B,4BAAKJ,EAAKK,YAAYT,OACtB,2BAAII,EAAKK,YAAYC,aAM/Bf,GACE,kBAAC,IAAD,CAAMW,GAAIR,EAAUa,IAAI,QAAxB,oBAIFf,GACE,kBAAC,IAAD,CAAMU,GAAIP,EAAUY,IAAI,QAAxB,iB,GAjCkBC,IAAMC,WA0C/BC,EAAa","file":"component---src-templates-blog-list-template-js-866425ed76045d34e2d1.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"index-module--posts--1x_bM\",\"post\":\"index-module--post--NIbrg\"};","import React from \"react\"\r\nimport {Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport Head from '../components/head'\r\nimport indexStyles from '../pages/index.module.scss'\r\n\r\n\r\nexport default class BlogList extends React.Component {\r\n    render() {\r\n        const posts = this.props.data.allMarkdownRemark.edges\r\n\r\n        const { currentPage, numPages } = this.props.pageContext\r\n        const isFirst = currentPage === 1\r\n        const isLast = currentPage === numPages\r\n        const prevPage = currentPage - 1 === 1 ? `/posts/1` : `/posts/${currentPage - 1}` \r\n        const nextPage = `/posts/${currentPage + 1}` \r\n\r\n        return (\r\n            <Layout>\r\n                <Head title=\"Home\" />\r\n                <h1>Blog</h1>\r\n                <ol className={indexStyles.posts}>\r\n                {posts.map(({ node }) => {\r\n                    // const title = node.frontmatter.title || node.fields.slug\r\n                    return (\r\n                        <li className={indexStyles.post}>\r\n                            <Link to={`/blog/${node.fields.slug}`}>\r\n                            <h2>{node.frontmatter.title}</h2>\r\n                            <p>{node.frontmatter.date}</p>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n                </ol>\r\n                {!isFirst && (\r\n                    <Link to={prevPage} rel=\"prev\">\r\n                        ← Previous Page\r\n                    </Link>\r\n                )}\r\n                {!isLast && (\r\n                    <Link to={nextPage} rel=\"next\">\r\n                        Next Page →\r\n                    </Link>\r\n                )}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport const blogListQuery = graphql`\r\n    query blogListQuery($skip: Int!, $limit: Int!) {\r\n        allMarkdownRemark(\r\n            sort: { fields: [frontmatter___date], order: DESC }\r\n            limit: $limit\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                    fields {\r\n                        slug\r\n                    }\r\n                        frontmatter {\r\n                        title\r\n                        date(formatString: \"DD.MM.YYYY\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`"],"sourceRoot":""}