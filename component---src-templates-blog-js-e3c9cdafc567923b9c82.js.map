{"version":3,"sources":["webpack:///./src/templates/blog.module.scss","webpack:///./src/components/video.js","webpack:///./src/templates/blog.js"],"names":["module","exports","Video","videoSrcURL","videoTitle","className","src","title","width","height","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","progressData","require","Blog","data","diffic","postData","frontmatter","difficulty","raidslug","bossSlug","fields","slug","kills","dummy","thisRoster","find","boss","matchesSlug","roster","blogStyles","singlePostWrapper","postContent","progress","video","options","settings","autoplaySpeed","lightboxTransitionSpeed","lightboxTransitionTimingFunction","slideAnimationType","slideSpringValues","slideTransitionSpeed","slideTransitionTimingFunction","buttons","iconColor","showAutoplayButton","showCloseButton","showDownloadButton","showFullscreenButton","showNextButton","showPrevButton","showThumbnailsButton","thumbnails","showThumbnails","thumbnailsAlignment","thumbnailsContainerBackgroundColor","thumbnailsContainerPadding","thumbnailsGap","thumbnailsOpacity","thumbnailsPosition","thumbnailsSize","progressBar","backgroundColor","fillColor","showProgressBar","caption","showCaption","screenshot","href","childImageSharp","original","target","rel","data-attribute","Image","relativePath","class","map","character","charName","name","split","charClass","replace","key","dangerouslySetInnerHTML","__html","html","fade","homeLink","to"],"mappings":"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","file":"component---src-templates-blog-js-e3c9cdafc567923b9c82.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"singlePostWrapper\":\"blog-module--singlePostWrapper--2oHAp\",\"postContent\":\"blog-module--postContent--rupnl\",\"screenshot\":\"blog-module--screenshot--2PvKN\",\"mdContent\":\"blog-module--mdContent--vUjdY\",\"homeLink\":\"blog-module--homeLink--1Ac_x\"};","import React from \"react\"\r\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\r\n  <div className=\"video\">\r\n    <iframe\r\n      src={videoSrcURL}\r\n      title={videoTitle}\r\n      width=\"800\"\r\n      height=\"400\"\r\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n      frameBorder=\"0\"\r\n      webkitallowfullscreen=\"true\"\r\n      mozallowfullscreen=\"true\"\r\n      allowFullScreen\r\n    />\r\n  </div>\r\n)\r\nexport default Video\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\n//import Img from 'gatsby-image'\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Head from \"../components/head\"\r\nimport Image from \"../components/Image\"\r\nimport { SRLWrapper } from \"simple-react-lightbox\"\r\nimport Video from \"../components/video\"\r\nimport blogStyles from \"./blog.module.scss\"\r\n\r\nconst progressData = require(\"../data/progress.json\")\r\n\r\nexport default function Blog({ data }) {\r\n  const options = {\r\n    settings: {\r\n      autoplaySpeed: 4000,\r\n\r\n      lightboxTransitionSpeed: 0.6,\r\n      lightboxTransitionTimingFunction: \"linear\",\r\n      slideAnimationType: \"fade\",\r\n      slideSpringValues: [300, 200],\r\n      slideTransitionSpeed: 1,\r\n      slideTransitionTimingFunction: \"linear\",\r\n    },\r\n    buttons: {\r\n      iconColor: \"rgba(211, 186, 134, 0.8)\",\r\n      showAutoplayButton: false,\r\n      showCloseButton: true,\r\n      showDownloadButton: true,\r\n      showFullscreenButton: true,\r\n      showNextButton: false,\r\n      showPrevButton: false,\r\n      showThumbnailsButton: false,\r\n    },\r\n    thumbnails: {\r\n      showThumbnails: false,\r\n      thumbnailsAlignment: \"center\",\r\n      thumbnailsContainerBackgroundColor: \"transparent\",\r\n      thumbnailsContainerPadding: \"10px\",\r\n      thumbnailsGap: \"5px\",\r\n      thumbnailsOpacity: 0.3,\r\n      thumbnailsPosition: \"bottom\",\r\n      thumbnailsSize: [\"100px\", \"80px\"],\r\n    },\r\n    progressBar: {\r\n      backgroundColor: \"#000000\",\r\n      fillColor: \"#D3BA86\",\r\n      height: \"3px\",\r\n      showProgressBar: true,\r\n    },\r\n    caption: {\r\n      showCaption: false,\r\n    },\r\n  }\r\n\r\n  //difficulty aus frontmatter\r\n  const diffic = data.postData.frontmatter.difficulty\r\n  const raidslug = data.postData.frontmatter.raidslug\r\n  const bossSlug = data.postData.fields.slug\r\n  const kills = progressData[raidslug][diffic]\r\n  var dummy = false\r\n\r\n  //const killsMapped = kills.map()\r\n  function matchesSlug(boss) {\r\n    if (boss === bossSlug) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  var thisRoster = []\r\n\r\n  if (raidslug === \"dummy\") {\r\n    dummy = true\r\n  }\r\n\r\n  if (raidslug !== \"dummy\") {\r\n    var thisKill = kills.find(({ boss }) => matchesSlug(boss))\r\n    thisRoster = thisKill.roster\r\n  }\r\n\r\n  // console.log('(=============================)')\r\n  // console.log(thisKill.roster)\r\n  // console.log('(=============================)')\r\n\r\n  // for(let i = 0; i < kills.length; ++i) {\r\n  //     let kill = kills[i]\r\n  //     console.log('(=============================)')\r\n  //     console.log(kill[i])\r\n  //     console.log('(=============================)')\r\n  // };\r\n  // const whTooltips = {colorLinks: true, iconizeLinks: true, renameLinks: true};\r\n\r\n  // FÃœR SORTIERUNG\r\n  // const collator = new Intl.Collator('en'); // or whatever language\r\n  //console.log(data)\r\n  return (\r\n    <Layout>\r\n      <>\r\n        <Head title={data.postData.frontmatter.title} />\r\n        <div className={blogStyles.singlePostWrapper}>\r\n          <div className={blogStyles.postContent}>\r\n            <h1>{data.postData.frontmatter.title}</h1>\r\n            <h5>{data.postData.frontmatter.progress}</h5>\r\n\r\n            {data.postData.frontmatter.video && (\r\n              <Video\r\n                videoSrcURL={`https://www.youtube.com/embed/${data.postData.frontmatter.video}`}\r\n                videoTitle={data.postData.frontmatter.title}\r\n              />\r\n            )}\r\n\r\n            <SRLWrapper options={options}>\r\n              {data.postData.frontmatter.screenshot && (\r\n                <a\r\n                  href={\r\n                    data.postData.frontmatter.screenshot.childImageSharp\r\n                      .original.src\r\n                  }\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  data-attribute=\"SRL\"\r\n                >\r\n                  <Image\r\n                    src={data.postData.frontmatter.screenshot.relativePath}\r\n                    className={blogStyles.screenshot}\r\n                  />\r\n                </a>\r\n              )}\r\n            </SRLWrapper>\r\n\r\n            <div class=\"setupTable\">\r\n              {thisRoster.map(({ character }) => {\r\n                const charName = character.name.split(\"-\")[0]\r\n                const charClass = character.class.slug.replace(/\\s/g, \"\")\r\n                return (\r\n                  <span key={character.name} class={charClass}>\r\n                    {charName}\r\n                  </span>\r\n                )\r\n              })}\r\n              {/* Roster Sortierung */}\r\n              {/* {              \r\n              thisRoster.map(({character}) => {\r\n                const [charName] = character.name.split('-')\r\n                const [charClass] = character.class.name.replace(/\\s+/g, '').toLowerCase()\r\n                return {\r\n                  name: character.name,\r\n                  charName, \r\n                  charClass,\r\n                  playerClass: character.class.name.replace(/\\s+/g, '').toLowerCase()\r\n                }\r\n              })\r\n              .sort((a,b) => collator.compare(a.name, b.name))\r\n              .map(({playerClass, name, charName}) => (<span key={name} className={playerClass}>{charName}</span>))\r\n            } */}\r\n            </div>\r\n\r\n            <div dangerouslySetInnerHTML={{ __html: data.postData.html }} />\r\n          </div>\r\n          {/* <AniLink fade className={blogStyles.homeLink} to=\"/posts/1\"><span className=\"icon-hearthstone\"> </span></AniLink> */}\r\n          {!dummy && (\r\n            <AniLink\r\n              fade\r\n              className={blogStyles.homeLink}\r\n              to={`/progress-${data.postData.frontmatter.raidslug}`}\r\n            >\r\n              <span className=\"icon-hearthstone\"> </span>\r\n            </AniLink>\r\n          )}\r\n          {dummy && (\r\n            <AniLink fade className={blogStyles.homeLink} to=\"/\">\r\n              <span className=\"icon-hearthstone\"> </span>\r\n            </AniLink>\r\n          )}\r\n        </div>\r\n      </>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const blogQuery = graphql`\r\n  query($slug: String!) {\r\n    postData: markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        date\r\n        progress\r\n        difficulty\r\n        raidslug\r\n        video\r\n        screenshot {\r\n          base\r\n          relativePath\r\n          childImageSharp {\r\n            original {\r\n              src\r\n            }\r\n            fluid(maxWidth: 1980) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n      excerpt(format: PLAIN)\r\n      html\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}