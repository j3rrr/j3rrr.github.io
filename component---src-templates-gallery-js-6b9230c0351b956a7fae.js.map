{"version":3,"sources":["webpack:///./src/templates/gallery.module.scss","webpack:///./src/templates/gallery.js"],"names":["module","exports","Gallery","render","images","this","props","data","allFile","edges","title","options","settings","autoplaySpeed","lightboxTransitionSpeed","lightboxTransitionTimingFunction","slideAnimationType","slideSpringValues","slideTransitionSpeed","slideTransitionTimingFunction","buttons","iconColor","thumbnails","showThumbnails","thumbnailsAlignment","thumbnailsContainerBackgroundColor","thumbnailsContainerPadding","thumbnailsGap","thumbnailsOpacity","thumbnailsPosition","thumbnailsSize","progressBar","backgroundColor","fillColor","height","showProgressBar","caption","showCaption","className","galleryStyles","galContainer","map","node","href","childImageSharp","original","src","data-attribute","key","id","fluid","alt","name","React","Component","galleryQuery"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,aAAe,sCAAsC,kBAAoB,2CAA2C,WAAa,oCAAoC,eAAiB,wCAAwC,gBAAkB,yCAAyC,OAAS,gCAAgC,SAAW,kCAAkC,QAAU,mC,iPCUtXC,E,kGAEjBC,OAAA,WACI,IAmCMC,EAASC,KAAKC,MAAMC,KAAKC,QAAQC,MASvC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,MAAM,cACZ,kBAAC,IAAD,CAAYC,QA/CJ,CACdC,SAAU,CACRC,cAAe,IAEfC,wBAAyB,GACzBC,iCAAkC,SAClCC,mBAAoB,OACpBC,kBAAmB,CAAC,IAAK,KACzBC,qBAAsB,EACtBC,8BAA+B,UAEjCC,QAAS,CACPC,UAAW,4BAEbC,WAAY,CACVC,gBAAgB,EAChBC,oBAAqB,SACrBC,mCAAoC,cACpCC,2BAA4B,OAC5BC,cAAe,MACfC,kBAAmB,GACnBC,mBAAoB,SACpBC,eAAgB,CAAC,QAAS,SAE5BC,YAAa,CACXC,gBAAiB,UACjBC,UAAW,UACXC,OAAQ,MACRC,iBAAiB,GAEnBC,QAAS,CACPC,aAAa,KAiBT,yBAAKC,UAAWC,IAAcC,cAE3BpC,EAAOqC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAOb,OAEE,uBAAGC,KAAMD,EAAKE,gBAAgBC,SAASC,IAAKC,iBAAe,MAAMC,IAAKN,EAAKO,IACzE,kBAAC,IAAD,CAAKC,MAAOR,EAAKE,gBAAgBM,MAAOC,IAAKT,EAAKU,e,GA/DrCC,IAAMC,WAsG9BC,EAAY","file":"component---src-templates-gallery-js-6b9230c0351b956a7fae.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"galContainer\":\"gallery-module--galContainer--1CxPl\",\"gallerypagination\":\"gallery-module--gallerypagination--3J9In\",\"gallerybtn\":\"gallery-module--gallerybtn--XUVk_\",\"gallerybtnMove\":\"gallery-module--gallerybtnMove--1gdHR\",\"gallerybtnMove2\":\"gallery-module--gallerybtnMove2--10b35\",\"fadeIn\":\"gallery-module--fadeIn--11Tsu\",\"fadeInUp\":\"gallery-module--fadeInUp--2C94-\",\"fadeOut\":\"gallery-module--fadeOut--3EX5P\"};","import React from \"react\"\r\nimport {graphql } from \"gatsby\"\r\nimport Img from 'gatsby-image'\r\n// import Image from '../components/Image'\r\nimport Layout from \"../components/layout\"\r\nimport Head from '../components/head'\r\n//import AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\nimport galleryStyles from './gallery.module.scss'\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\n\r\nexport default class Gallery extends React.Component {\r\n  \r\n    render() {\r\n        const options = {\r\n          settings: {\r\n            autoplaySpeed: 4000,\r\n            \r\n            lightboxTransitionSpeed: 0.6,\r\n            lightboxTransitionTimingFunction: 'linear',\r\n            slideAnimationType: 'fade',\r\n            slideSpringValues: [300, 200],\r\n            slideTransitionSpeed: 1,\r\n            slideTransitionTimingFunction: 'linear'\r\n          },\r\n          buttons: {\r\n            iconColor: \"rgba(211, 186, 134, 0.8)\",\r\n          },\r\n          thumbnails: {\r\n            showThumbnails: true,\r\n            thumbnailsAlignment: 'center',\r\n            thumbnailsContainerBackgroundColor: 'transparent',\r\n            thumbnailsContainerPadding: '10px',\r\n            thumbnailsGap: '5px',\r\n            thumbnailsOpacity: 0.3,\r\n            thumbnailsPosition: 'bottom',\r\n            thumbnailsSize: ['100px', '80px']\r\n          },\r\n          progressBar: {\r\n            backgroundColor: '#000000',\r\n            fillColor: '#D3BA86',\r\n            height: '3px',\r\n            showProgressBar: true\r\n          },\r\n          caption: {\r\n            showCaption: false\r\n          }\r\n        };\r\n      \r\n        const images = this.props.data.allFile.edges\r\n\r\n        // const { currentGalPage, numGalPages } = this.props.pageContext\r\n        // const isFirstGal = currentGalPage === 1\r\n        // const isLastGal = currentGalPage === numGalPages\r\n        // const prevGalPage = currentGalPage - 1 === 1 ? `/gallery/1` : `/gallery/${currentGalPage - 1}` \r\n        // const nextGalPage = `/gallery/${currentGalPage + 1}` \r\n        //var counter = 0\r\n\r\n        return (\r\n            <Layout>\r\n                <Head title=\"Zero Life\" />\r\n                <SRLWrapper options={options}>\r\n                <div className={galleryStyles.galContainer}>\r\n               \r\n                  {images.map(({ node }) => {                    \r\n                    //counter = counter + 1\r\n                    // var cssclass = 'img'+counter;\r\n                    // var bgimage = {\r\n                    //   backgroundImage: `url(${node.childImageSharp.fluid.src})`,\r\n                    // }\r\n                    \r\n                    return (\r\n                     \r\n                      <a href={node.childImageSharp.original.src} data-attribute=\"SRL\" key={node.id}>\r\n                        <Img fluid={node.childImageSharp.fluid} alt={node.name}></Img>\r\n                      </a>\r\n\r\n                      // <a href={node.childImageSharp.original.src} target=\"_blank\"  rel=\"noreferrer\" style={bgimage} className={galleryStyles[`${cssclass}`]}>                        \r\n                      // </a>\r\n                      //  <Img fluid={node.childImageSharp.fluid} />\r\n                    )\r\n                    })}\r\n                 \r\n                \r\n                    {/* <div className={galleryStyles.gallerypagination}>                \r\n                        {!isFirstGal && (\r\n                            <AniLink\r\n                                fade\r\n                                className={`${galleryStyles.gallerybtn} ${galleryStyles.gallerybtnMove} ${galleryStyles.gallerybtnMove2}`}\r\n                                to={prevGalPage}\r\n                                rel=\"prev\"\r\n                            >\r\n                                <span>Zurück</span><span>←</span>\r\n                            </AniLink >\r\n                        )}\r\n                        {!isLastGal && (\r\n                            <AniLink\r\n                                fade\r\n                                className={`${galleryStyles.gallerybtn} ${galleryStyles.gallerybtnMove} ${galleryStyles.gallerybtnMove2}`}\r\n                                to={nextGalPage}\r\n                                rel=\"next\"\r\n                            >\r\n                                <span>Weiter</span><span>→</span>\r\n                            </AniLink >\r\n                        )}\r\n                    </div>  */}\r\n                    </div>\r\n                    </SRLWrapper>      \r\n              </Layout>\r\n      )\r\n    }\r\n}\r\n\r\nexport const galleryQuery = graphql`\r\n    query galleryQuery{\r\n      allFile(\r\n        limit: 1000\r\n        sort: {fields: mtime, order: DESC}\r\n        filter:{\r\n          relativeDirectory: {\r\n            eq: \"images/gallery\"\r\n          }     \r\n        }\r\n      ){\r\n        totalCount\r\n        edges{\r\n          node{\r\n            relativeDirectory\r\n            relativePath\r\n            base\r\n            name\r\n            id\r\n            childImageSharp {\r\n                original{src}\r\n                fluid(maxWidth: 1920) {\r\n                ...GatsbyImageSharpFluid\r\n                src\r\n                }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n`\r\n\r\n// export const galleryQuery = graphql`\r\n//     query galleryQuery($skip: Int!, $limit: Int!){\r\n//       allFile(\r\n//         limit: $limit\r\n//         skip: $skip\r\n//         sort: {fields: mtime, order: DESC}\r\n//         filter:{\r\n//           relativeDirectory: {\r\n//             eq: \"images/gallery\"\r\n//           }     \r\n//         }\r\n//       ){\r\n//         totalCount\r\n//         edges{\r\n//           node{\r\n//             relativeDirectory\r\n//             relativePath\r\n//             base\r\n//             childImageSharp {\r\n//                 original{src}\r\n//                 fluid(maxWidth: 1920) {\r\n//                 ...GatsbyImageSharpFluid\r\n//                 }\r\n//             }\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n// `"],"sourceRoot":""}