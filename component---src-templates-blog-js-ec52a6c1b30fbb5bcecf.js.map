{"version":3,"sources":["webpack:///./src/templates/blog.module.scss","webpack:///./src/templates/blog.js"],"names":["module","exports","progressData","require","Blog","data","diffic","postData","frontmatter","difficulty","raidslug","bossSlug","fields","slug","kills","dummy","thisRoster","find","boss","matchesSlug","roster","title","className","blogStyles","singlePostWrapper","postContent","progress","options","settings","autoplaySpeed","lightboxTransitionSpeed","lightboxTransitionTimingFunction","slideAnimationType","slideSpringValues","slideTransitionSpeed","slideTransitionTimingFunction","buttons","iconColor","showAutoplayButton","showCloseButton","showDownloadButton","showFullscreenButton","showNextButton","showPrevButton","showThumbnailsButton","thumbnails","showThumbnails","thumbnailsAlignment","thumbnailsContainerBackgroundColor","thumbnailsContainerPadding","thumbnailsGap","thumbnailsOpacity","thumbnailsPosition","thumbnailsSize","progressBar","backgroundColor","fillColor","height","showProgressBar","caption","showCaption","screenshot","href","childImageSharp","original","src","target","rel","data-attribute","relativePath","class","map","character","charName","name","split","charClass","replace","key","dangerouslySetInnerHTML","__html","html","fade","homeLink","to","blogQuery"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,kBAAoB,wCAAwC,YAAc,kCAAkC,WAAa,iCAAiC,UAAY,gCAAgC,SAAW,iC,kCCDnO,4MAWMC,EAAeC,EAAQ,QAEd,SAASC,EAAT,GAAwB,IAARC,EAAO,EAAPA,KA6CvBC,EAASD,EAAKE,SAASC,YAAYC,WACnCC,EAAWL,EAAKE,SAASC,YAAYE,SACrCC,EAAWN,EAAKE,SAASK,OAAOC,KAChCC,EAAQZ,EAAaQ,GAAUJ,GACjCS,GAAQ,EASZ,IAAIC,EAAa,IAED,UAAbN,IACDK,GAAQ,GAGO,UAAbL,KAEFM,EADeF,EAAMG,MAAK,mBAb5B,SAAqBC,GACnB,GAAGA,IAASP,EACV,OAAO,EAW6BQ,CAAZ,EAAED,SACNE,QAmBxB,OACE,kBAAC,IAAD,KAAQ,oCACN,kBAAC,IAAD,CAAMC,MAAOhB,EAAKE,SAASC,YAAYa,QACvC,yBAAKC,UAAWC,IAAWC,mBACzB,yBAAMF,UAAWC,IAAWE,aAE1B,4BAAKpB,EAAKE,SAASC,YAAYa,OAC/B,4BAAKhB,EAAKE,SAASC,YAAYkB,UAC/B,kBAAC,IAAD,CAAYC,QA3FJ,CACdC,SAAU,CACRC,cAAe,IAEfC,wBAAyB,GACzBC,iCAAkC,SAClCC,mBAAoB,OACpBC,kBAAmB,CAAC,IAAK,KACzBC,qBAAsB,EACtBC,8BAA+B,UAEjCC,QAAS,CACPC,UAAW,2BACXC,oBAAoB,EACpBC,iBAAiB,EACjBC,oBAAoB,EACpBC,sBAAsB,EACtBC,gBAAgB,EAChBC,gBAAgB,EAChBC,sBAAsB,GAExBC,WAAY,CACVC,gBAAgB,EAChBC,oBAAqB,SACrBC,mCAAoC,cACpCC,2BAA4B,OAC5BC,cAAe,MACfC,kBAAmB,GACnBC,mBAAoB,SACpBC,eAAgB,CAAC,QAAS,SAE5BC,YAAa,CACXC,gBAAiB,UACjBC,UAAW,UACXC,OAAQ,MACRC,iBAAiB,GAEnBC,QAAS,CACPC,aAAa,KAsDRvD,EAAKE,SAASC,YAAYqD,YACzB,uBAAGC,KAAMzD,EAAKE,SAASC,YAAYqD,WAAWE,gBAAgBC,SAASC,IAAKC,OAAO,SAASC,IAAI,aAAaC,iBAAe,OAC1H,kBAAC,IAAD,CACEH,IAAK5D,EAAKE,SAASC,YAAYqD,WAAWQ,aAC1C/C,UAAWC,IAAWsC,eAO5B,yBAAKS,MAAM,cACRtD,EAAWuD,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,UACXC,EAAWD,EAAUE,KAAKC,MAAM,KAAK,GACrCC,EAAYJ,EAAUF,MAAMzD,KAAKgE,QAAQ,MAAO,IACtD,OACI,0BAAMC,IAAKN,EAAUE,KAAMJ,MAAOM,GAAYH,OAoBtD,yBAAKM,wBAAyB,CAAEC,OAAQ3E,EAAKE,SAAS0E,UAItDlE,GACA,kBAAC,IAAD,CAASmE,MAAI,EAAC5D,UAAWC,IAAW4D,SAAUC,GAAE,aAAe/E,EAAKE,SAASC,YAAYE,UAAY,0BAAMY,UAAU,oBAAhB,MAEtGP,GACC,kBAAC,IAAD,CAASmE,MAAI,EAAC5D,UAAWC,IAAW4D,SAAUC,GAAG,KAAI,0BAAM9D,UAAU,oBAAhB,SAQxD,IAAM+D,EAAS,c","file":"component---src-templates-blog-js-ec52a6c1b30fbb5bcecf.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"singlePostWrapper\":\"blog-module--singlePostWrapper--2oHAp\",\"postContent\":\"blog-module--postContent--rupnl\",\"screenshot\":\"blog-module--screenshot--2PvKN\",\"mdContent\":\"blog-module--mdContent--vUjdY\",\"homeLink\":\"blog-module--homeLink--1Ac_x\"};","import React from 'react'\r\nimport {graphql} from 'gatsby'\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\n//import Img from 'gatsby-image'\r\n\r\nimport Layout from '../components/layout'\r\nimport Head from '../components/head'\r\nimport Image from '../components/Image'\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\nimport blogStyles from './blog.module.scss'\r\n\r\nconst progressData = require('../data/progress.json')\r\n\r\nexport default function Blog ({data}) {\r\n\r\n  const options = {\r\n    settings: {\r\n      autoplaySpeed: 4000,\r\n      \r\n      lightboxTransitionSpeed: 0.6,\r\n      lightboxTransitionTimingFunction: 'linear',\r\n      slideAnimationType: 'fade',\r\n      slideSpringValues: [300, 200],\r\n      slideTransitionSpeed: 1,\r\n      slideTransitionTimingFunction: 'linear'\r\n    },\r\n    buttons: {\r\n      iconColor: \"rgba(211, 186, 134, 0.8)\",\r\n      showAutoplayButton: false,\r\n      showCloseButton: true,\r\n      showDownloadButton: true,\r\n      showFullscreenButton: true,\r\n      showNextButton: false,\r\n      showPrevButton: false,\r\n      showThumbnailsButton: false,\r\n    },\r\n    thumbnails: {\r\n      showThumbnails: false,\r\n      thumbnailsAlignment: 'center',\r\n      thumbnailsContainerBackgroundColor: 'transparent',\r\n      thumbnailsContainerPadding: '10px',\r\n      thumbnailsGap: '5px',\r\n      thumbnailsOpacity: 0.3,\r\n      thumbnailsPosition: 'bottom',\r\n      thumbnailsSize: ['100px', '80px']\r\n    },\r\n    progressBar: {\r\n      backgroundColor: '#000000',\r\n      fillColor: '#D3BA86',\r\n      height: '3px',\r\n      showProgressBar: true\r\n    },\r\n    caption: {\r\n      showCaption: false\r\n    }\r\n  };\r\n\r\n  //difficulty aus frontmatter\r\n  const diffic = data.postData.frontmatter.difficulty\r\n  const raidslug = data.postData.frontmatter.raidslug\r\n  const bossSlug = data.postData.fields.slug  \r\n  const kills = progressData[raidslug][diffic]\r\n  var dummy = false\r\n\r\n  //const killsMapped = kills.map()\r\n  function matchesSlug(boss) {\r\n    if(boss === bossSlug){\r\n      return true\r\n    }\r\n  }\r\n\r\n  var thisRoster = []\r\n\r\n  if(raidslug === \"dummy\"){\r\n    dummy = true\r\n  }\r\n\r\n  if (raidslug !== \"dummy\") {\r\n    var thisKill = kills.find(({boss}) => matchesSlug(boss) )\r\n    thisRoster = thisKill.roster\r\n  } \r\n  \r\n\r\n    // console.log('(=============================)')\r\n    // console.log(thisKill.roster)\r\n    // console.log('(=============================)')\r\n\r\n    // for(let i = 0; i < kills.length; ++i) {\r\n    //     let kill = kills[i]\r\n    //     console.log('(=============================)')\r\n    //     console.log(kill[i])\r\n    //     console.log('(=============================)')\r\n    // };\r\n   // const whTooltips = {colorLinks: true, iconizeLinks: true, renameLinks: true};\r\n    \r\n   // FÃœR SORTIERUNG\r\n // const collator = new Intl.Collator('en'); // or whatever language\r\n    //console.log(data)\r\n  return (\r\n    <Layout><>          \r\n      <Head title={data.postData.frontmatter.title} />\r\n      <div className={blogStyles.singlePostWrapper}>\r\n        <div  className={blogStyles.postContent}>\r\n\r\n          <h1>{data.postData.frontmatter.title}</h1>\r\n          <h5>{data.postData.frontmatter.progress}</h5>\r\n          <SRLWrapper options={options}>\r\n          {data.postData.frontmatter.screenshot && \r\n            <a href={data.postData.frontmatter.screenshot.childImageSharp.original.src} target=\"_blank\" rel=\"noreferrer\" data-attribute=\"SRL\">\r\n              <Image\r\n                src={data.postData.frontmatter.screenshot.relativePath}     \r\n                className={blogStyles.screenshot}                                   \r\n              />  \r\n            </a>                                  \r\n          }\r\n          </SRLWrapper>\r\n          \r\n          \r\n          <div class=\"setupTable\">\r\n            {thisRoster.map(({ character }) => {\r\n              const charName = character.name.split(\"-\")[0];\r\n              const charClass = character.class.slug.replace(/\\s/g, '')\r\n              return (                                    \r\n                  <span key={character.name} class={charClass}>{charName}</span>                     \r\n              )\r\n            })}\r\n            {/* Roster Sortierung */}\r\n            {/* {              \r\n              thisRoster.map(({character}) => {\r\n                const [charName] = character.name.split('-')\r\n                const [charClass] = character.class.name.replace(/\\s+/g, '').toLowerCase()\r\n                return {\r\n                  name: character.name,\r\n                  charName, \r\n                  charClass,\r\n                  playerClass: character.class.name.replace(/\\s+/g, '').toLowerCase()\r\n                }\r\n              })\r\n              .sort((a,b) => collator.compare(a.name, b.name))\r\n              .map(({playerClass, name, charName}) => (<span key={name} className={playerClass}>{charName}</span>))\r\n            } */}\r\n          </div>\r\n          \r\n          <div dangerouslySetInnerHTML={{ __html: data.postData.html }}/>\r\n\r\n        </div>    \r\n        {/* <AniLink fade className={blogStyles.homeLink} to=\"/posts/1\"><span className=\"icon-hearthstone\"> </span></AniLink> */}\r\n        {!dummy &&\r\n          <AniLink fade className={blogStyles.homeLink} to={`/progress-${data.postData.frontmatter.raidslug}`}><span className=\"icon-hearthstone\"> </span></AniLink>\r\n        }\r\n        {dummy && \r\n          <AniLink fade className={blogStyles.homeLink} to=\"/\"><span className=\"icon-hearthstone\"> </span></AniLink>\r\n        }\r\n      </div>\r\n    </></Layout>\r\n  )\r\n}\r\n\r\n\r\nexport const blogQuery = graphql`\r\n  query (\r\n    $slug: String!\r\n  ) {\r\n    postData: markdownRemark (\r\n      fields: {\r\n        slug: {\r\n          eq: $slug\r\n        }\r\n      }\r\n    ) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter{\r\n        title\r\n        date\r\n        progress\r\n        difficulty\r\n        raidslug\r\n        screenshot {\r\n          base\r\n          relativePath\r\n          childImageSharp {\r\n            original{src}\r\n            fluid(maxWidth: 1980) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        } \r\n      }\r\n      excerpt(format:PLAIN)\r\n      html\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}