{"version":3,"sources":["webpack:///./src/pages/progress.module.scss","webpack:///./src/pages/progress-sanctum-of-domination.js"],"names":["module","exports","SanctumProgress","render","kills","this","props","data","allMarkdownRemark","edges","counter","isEven","value","title","className","progressStyles","timeline","map","node","diff","frontmatter","difficulty","diffclass","leftright","key","id","flagWrapper","hexa","flag","fade","to","fields","slug","substr","toUpperCase","timeWrapper","time","date","React","Component"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,KAAO,+BAA+B,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,WAAa,qCAAqC,WAAa,qCAAqC,YAAc,uCAAuC,KAAO,+BAA+B,YAAc,uCAAuC,KAAO,+BAA+B,KAAO,iC,wLCOtcC,E,kGACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC5CC,EAAU,EAEd,SAASC,EAAOC,GACd,OAAIA,EAAQ,GAAM,EAepB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,MAAM,mBACZ,wBAAIC,UAAWC,IAAeC,UAC3BZ,EAAMa,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACRC,EAAOD,EAAKE,YAAYC,WAExBC,EAdS,WAcYH,EAAQ,SAAW,SACxCI,EAAYZ,EAFhBD,GAAoB,GAEc,aAAe,aACjD,OACE,wBAAIc,IAAKN,EAAKO,IACZ,yBAAKX,UAAWC,IAAe,GAAGQ,IAChC,yBAAKT,UAAWC,IAAeW,aAC7B,0BAAMZ,UAAWC,IAAeY,OAChC,0BAAMb,UAAWC,IAAea,MAC9B,kBAAC,IAAD,CAASC,MAAI,EAACC,GAAE,SAAWZ,EAAKa,OAAOC,MACpCrB,EAAOD,GACN,oCACE,0BAAMI,UAAWC,IAAe,GAAGO,IAChCJ,EAAKE,YAAYC,WACfY,OAAO,EAAG,GACVC,eAEJhB,EAAKE,YAAYP,OAGpB,oCACGK,EAAKE,YAAYP,MAClB,0BAAMC,UAAWC,IAAe,GAAGO,IAChCJ,EAAKE,YAAYC,WACfY,OAAO,EAAG,GACVC,kBAMb,0BAAMpB,UAAWC,IAAeoB,aAC9B,0BAAMrB,UAAWC,IAAeqB,MAC7BlB,EAAKE,YAAYiB,gB,GA5DGC,IAAMC","file":"component---src-pages-progress-sanctum-of-domination-js-3b23041ac362eaed5fa7.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hexa\":\"progress-module--hexa--3B1NY\",\"timeline\":\"progress-module--timeline--3CgKd\",\"mythic\":\"progress-module--mythic--18WW9\",\"heroic\":\"progress-module--heroic--38rfL\",\"directionL\":\"progress-module--directionL--3JMlC\",\"directionR\":\"progress-module--directionR--3ddIF\",\"flagWrapper\":\"progress-module--flag-wrapper--31HrR\",\"flag\":\"progress-module--flag--2qhom\",\"timeWrapper\":\"progress-module--time-wrapper--anby_\",\"time\":\"progress-module--time--1lbD0\",\"desc\":\"progress-module--desc--2U2Qt\"};","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\nimport Layout from \"../components/layout\"\r\nimport Head from \"../components/head\"\r\n\r\nimport progressStyles from \"./progress.module.scss\"\r\n\r\nexport default class SanctumProgress extends React.Component {\r\n  render() {\r\n    const kills = this.props.data.allMarkdownRemark.edges\r\n    var counter = 0\r\n\r\n    function isEven(value) {\r\n      if (value % 2 === 0) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n\r\n    function isMythic(difficulty) {\r\n      if (difficulty === \"mythic\") {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <Head title=\"Castle Nathria\" />\r\n        <ul className={progressStyles.timeline}>\r\n          {kills.map(({ node }) => {\r\n            var diff = node.frontmatter.difficulty\r\n            counter = counter + 1\r\n            var diffclass = isMythic(diff) ? \"mythic\" : \"heroic\"\r\n            var leftright = isEven(counter) ? \"directionR\" : \"directionL\"\r\n            return (\r\n              <li key={node.id}>\r\n                <div className={progressStyles[`${leftright}`]}>\r\n                  <div className={progressStyles.flagWrapper}>\r\n                    <span className={progressStyles.hexa}></span>\r\n                    <span className={progressStyles.flag}>\r\n                      <AniLink fade to={`/blog/${node.fields.slug}`}>\r\n                        {isEven(counter) ? (\r\n                          <>\r\n                            <span className={progressStyles[`${diffclass}`]}>\r\n                              {node.frontmatter.difficulty\r\n                                .substr(0, 1)\r\n                                .toUpperCase()}\r\n                            </span>\r\n                            {node.frontmatter.title}\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            {node.frontmatter.title}\r\n                            <span className={progressStyles[`${diffclass}`]}>\r\n                              {node.frontmatter.difficulty\r\n                                .substr(0, 1)\r\n                                .toUpperCase()}\r\n                            </span>\r\n                          </>\r\n                        )}\r\n                      </AniLink>\r\n                    </span>\r\n                    <span className={progressStyles.timeWrapper}>\r\n                      <span className={progressStyles.time}>\r\n                        {node.frontmatter.date}\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport const sanctumQuery = graphql`\r\n  query sanctumQuery {\r\n    allMarkdownRemark(\r\n      filter: { frontmatter: { raidslug: { eq: \"sanctum-of-domination\" } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          id\r\n          frontmatter {\r\n            raidslug\r\n            title\r\n            difficulty\r\n            date(formatString: \"DD. MMM YYYY\", locale: \"de\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}